#!/usr/bin/env -S bash
###########################################################
# @Author: dezhaoli@tencent.com
# @Date:   
# Please contact dezhaoli if you have any questions.
###########################################################
. "$(which d)"


#mdfind -onlyin /Volumes/.../Project/Assets/ "kMDItemDisplayName = '*.prefab'c  && ( kMDItemTextContent = 'xxx' )"

#@
function find-references-in-project()
{
	local project_dir=""					#@
	local asset_paths=()					#@ nargs=+; help='e.g. assets/xxx/x.prefab'
	local onlyins=( Assets )				#@ --onlyin; action='append' ; help='default search in project_dir/Assets/'
	local is_direct=false 					#@ --direct-only; action=store_true;
	____ "$@"


	[[ -d "$project_dir/Assets" ]] || die "Failed to find project's Assets path '$project_dir/Assets'"
	cd "$project_dir"

	for a in "${asset_paths[@]}"; do
		[[ -f "$a" ]] || die "Asset not found: asset=[$a]"
	done

	(( ${#onlyins} > 0 )) || die "onlyins is empty"
	local search_dirs=$(printf " -onlyin $project_dir/"'%s' "${onlyins[@]}")


	_findref(){

		local guids=
		while read guid ;do 
		  guids="$guids || kMDItemTextContent = $guid"
		done < <(grep -v 'm_Script: ' "$@" |sed -nE 's@.*guid: (.*),.*@\1@p' | sort -u )
		guids="${guids## ||}"

		[[ -n "$guids" ]] || return 0
		echo mdfind $search_dirs "kMDItemDisplayName = '*.meta'c  && ( $guids )"
		local paths=()
		while read path;do
			echo "path:${path%%.meta}"
			if [[ "$path" =~ ".prefab.meta" || "$path" =~ ".mat.meta" ]]; then
				paths+=("${path%%.meta}")
			fi
		done< <(mdfind $search_dirs "kMDItemDisplayName = '*.meta'c  && ( $guids )")
		# echo _findref "$paths"
		if ! $is_direct && [[ -n "$paths" ]]; then
			_findref "${paths[@]}"
		fi
	}

	_findref "${asset_paths[@]}" | grep '^path:' |grep -o 'Assets/.*' |sort -u

}


#@
function find-cginc-ref()
{
	local project_dir=""			#@
	local path=""					#@ help='e.g. "Assets/effect.cginc"'
	____ "$@"

	declare -A counter
	_findcgincref()
	{
		local s="$(realpath "$1")" || return
		[[ -f "$s" ]] || return
		[[ ${counter["$s"]} == "1" ]] && return
		echo "$s"
		counter["$s"]=1
		local basedir="$(dirname "$s")"
		while read ref_cginc ;do 
			eval ref_cginc="$ref_cginc"
			if [[ "$ref_cginc" == UnityCG.cginc ]]; then
				continue
			elif [[ "$ref_cginc" =~ Packages/.* ]]; then
				ref_cginc="${ref_cginc//Packages\//}"
				ref_cginc=$(mdfind -onlyin "$project_dir/../Program/Bundle/Shared/Packages/" "kMDItemDisplayName = '$(basename $ref_cginc)'c" | grep $(dirname "$ref_cginc"))
			elif [[ "$ref_cginc" =~ Assets/.* ]]; then
				ref_cginc="$project_dir/$ref_cginc"
			else
				ref_cginc="$basedir/$ref_cginc"
			fi
			_findcgincref "$ref_cginc"
		done < <(grep '#include ' $s |grep -o '".*"' |sort -u )
	}
	_findcgincref "$path"
}

main "$@"